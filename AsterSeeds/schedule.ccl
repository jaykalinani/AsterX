#Schedule definitions for thorn AsterSeeds

#Initial conditions for setting atmosphere test

if (CCTK_Equals(test_type, "Atmosphere")) {

  SCHEDULE Atmosphere_Initialize IN HydroBaseX_InitialData AFTER HydroBaseX_initial_data {
  LANG: C
  WRITES: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::press(everywhere)
  WRITES: AsterX::Avec_x(everywhere) AsterX::Avec_y(everywhere) AsterX::Avec_z(everywhere)
  }
  "Set up initial conditions for atmosphere"
}

#Initial conditions for BBH Cloud ID

if (CCTK_Equals(test_type, "BBHCloud")) {

  SCHEDULE BBHCloud_Initialize IN HydroBaseX_InitialData AFTER HydroBaseX_initial_data {
  LANG: C
  READS: ADMBaseX::metric(everywhere)
  WRITES: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::press(everywhere)
  WRITES: AsterX::Avec_x(everywhere) AsterX::Avec_y(everywhere) AsterX::Avec_z(everywhere)
  }
  "Set up initial conditions for atmosphere"
}

#Initial conditions for 1D tests

if (CCTK_Equals(test_type, "1DTest")) {

  SCHEDULE Tests1D_Initialize IN HydroBaseX_InitialData AFTER HydroBaseX_initial_data {
  LANG: C 
  WRITES: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::press(everywhere)
  WRITES: AsterX::Avec_x(everywhere) AsterX::Avec_y(everywhere) AsterX::Avec_z(everywhere)
  }
  "Set up initial conditions for 1D tests"
}

#Initial conditions for 2D tests

if (CCTK_Equals(test_type, "2DTest")) {

  SCHEDULE Tests2D_Initialize IN HydroBaseX_InitialData AFTER HydroBaseX_initial_data {
  LANG: C 
  WRITES: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::press(everywhere)
  WRITES: AsterX::Avec_x(everywhere) AsterX::Avec_y(everywhere) AsterX::Avec_z(everywhere)
  }
  "Set up initial conditions for 2D tests"
}
#Initial conditions for 3D tests

if (CCTK_Equals(test_type, "3DTest")) {

  if (CCTK_Equals(test_case, "spherical shock")) {
    SCHEDULE Tests3D_Initialize IN HydroBaseX_InitialData AFTER HydroBaseX_initial_data {
    LANG: C 
    WRITES: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::press(everywhere)
    WRITES: AsterX::Avec_x(everywhere) AsterX::Avec_y(everywhere) AsterX::Avec_z(everywhere)
    }
    "Set up initial conditions for 3D tests"
  }

  #Initial conditions for magnetic field for TOV test

  if (CCTK_Equals(test_case, "magTOV")) {

    STORAGE: Avec_cent
    SCHEDULE AsterSeeds_InitializeCenteredAvec_TOV AT initial IN ODESolvers_Initial AFTER HydroBaseX_PostInitial BEFORE AsterX_InitialGroup {
    LANG: C 
    READS: HydroBaseX::press(everywhere) 
    WRITES: Avec_x_cent(everywhere) Avec_y_cent(everywhere) Avec_z_cent(everywhere)
    }
    "Set up initial conditions for the cell-centered vector potential"

    SCHEDULE AsterSeeds_InitializeStagAvec_TOV AT initial IN ODESolvers_Initial AFTER AsterSeeds_InitializeCenteredAvec_TOV BEFORE AsterX_InitialGroup {
    LANG: C 
    READS: Avec_x_cent(everywhere) Avec_y_cent(everywhere) Avec_z_cent(everywhere) 
    WRITES: AsterX::Avec_x(interior) AsterX::Avec_y(interior) AsterX::Avec_z(interior) 
    SYNC: AsterX::Avec_x AsterX::Avec_y AsterX::Avec_z
    }
    "Set up initial conditions for the vector potential"
  }

  #Initial conditions for magnetic field for BNS

  if (CCTK_Equals(test_case, "magBNS")) {

    STORAGE: Avec_cent
    SCHEDULE AsterSeeds_InitializeCenteredAvec_BNS AT initial IN ODESolvers_Initial AFTER HydroBaseX_PostInitial BEFORE AsterX_InitialGroup {
    LANG: C
    READS: HydroBaseX::press(everywhere)
    WRITES: Avec_x_cent(everywhere) Avec_y_cent(everywhere) Avec_z_cent(everywhere)
    }
    "Set up initial conditions for the cell-centered vector potential"

    SCHEDULE AsterSeeds_InitializeStagAvec_BNS AT initial IN ODESolvers_Initial AFTER AsterSeeds_InitializeCenteredAvec_BNS BEFORE AsterX_InitialGroup {
    LANG: C
    READS: Avec_x_cent(everywhere) Avec_y_cent(everywhere) Avec_z_cent(everywhere)
    WRITES: AsterX::Avec_x(interior) AsterX::Avec_y(interior) AsterX::Avec_z(interior)
    SYNC: AsterX::Avec_x AsterX::Avec_y AsterX::Avec_z
    }
    "Set up initial conditions for the vector potential"
  }

}

#Initial conditions for TabEOS tests

if (CCTK_Equals(test_type, "TabEOSTest")) {

  SCHEDULE TabEOSTests_Initialize IN HydroBaseX_InitialData AFTER HydroBaseX_initial_data {
  LANG: C 
  WRITES: HydroBaseX::rho(everywhere) HydroBaseX::vel(everywhere)
  WRITES: AsterX::Avec_x(everywhere) AsterX::Avec_y(everywhere) AsterX::Avec_z(everywhere)
  }
  "Set up initial conditions for TabEOS tests"
}

#Initial conditions for temperature, entropy and Ye

if (set_Ye_postinitial) {
  SCHEDULE SetYe IN HydroBaseX_PostInitial
  {
    LANG: C
    WRITES: HydroBaseX::Ye(everywhere)
  
  } "Set initial Ye"
}

if (set_temperature_postinitial) {
  SCHEDULE SetTemp IN HydroBaseX_PostInitial AFTER SetYe
  {
    LANG: C 
    READS: HydroBaseX::rho(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::Ye(everywhere)
    WRITES: HydroBaseX::temperature(everywhere) HydroBaseX::eps(everywhere)
  
  } "Set initial temperature"
}

if (set_entropy_postinitial) {
  SCHEDULE SetEntropy IN HydroBaseX_PostInitial AFTER SetTemp
  {
    LANG: C
    READS: HydroBaseX::rho(everywhere) HydroBaseX::eps(everywhere) HydroBaseX::Ye(everywhere)
    WRITES: HydroBaseX::entropy(everywhere) HydroBaseX::eps(everywhere)
  
  } "Set initial entropy"
}
